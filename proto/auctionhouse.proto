/* 
  Generate-files:
    protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative auctionhouse.proto
*/

syntax = "proto3";
package proto;

option go_package = "./proto"; 

service AuctionhouseService {
  rpc Result(stream QueryResult) returns (stream ResponseToQuery) {}
  rpc Bid(stream BidRequest) returns (stream StatusOfBid) {} 
}

// Send a new bid + subscribing
message BidRequest {
  int32 clientId = 1;
  int32 amount = 2;
}

message ResponseToQuery {
  string auctionStatusMessage = 1;
  int32 highestBid = 2; 
  int32 highestBidderID = 3;
  string item = 4;
}

message QueryResult {
  int32 clientId = 1;
}

message StatusOfBid {
  Status status = 1;
}

enum Status {
  NOW_HIGHEST_BIDDER = 0;
  TOO_LOW_BID = 1;
  EXCEPTION = 2;
  FINISHED = 3;
  NEW = 4;
}
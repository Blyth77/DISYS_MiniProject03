TODO: 

Server:
- Bid func {ca. l. 79} - only check against global highest bid                                                                              v
- New func HandleBid; should be go routine; ny client (måske en anden func også); er bid det nye højeste globalt?                           vvxv
        /* func (s *Server) HandleNewBidForClient(srv protos.AuctionhouseService_BidServer) {                                               v
        } */                                                                                                                                v
        /* func (s *Server) SendBidStatusToClient () */
            ↑ næsten done - mangler case for expection
- SendResultToAll: redo the func; måske med hjælp fra christian
- KillAuctioneers: implemt when quit and dead
- ResultsWhenTimeRunsOut: impl a message that says something like "the winner of the item is..."; more refinement
- msg for receiveQueryForResultAndSendToClient()
- implement addToMessageQueue() everytime some one/thing needs to brodcast something
- Since we need to call more servers, impl a solution for severeal servers in main main() and un hardcode serverid in server main()
- Subsribe for result stream?
- if highest bidder quits?

Client:
- Kill off client name
- receiveFromResult: implement (client line 108)
- check in userinput if it is a bid or result + edit welcome message
- recvBidStatus() send status msg
- edit welcome message in general
- delete enterusername()
- ask christian about Setup()
- UserInput: impl result and bid


CHANGES :

server:
- delete amount fron sub struct


behøver ikke at sende til alle clients (intet krav)